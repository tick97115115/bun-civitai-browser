
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"

export type * from '../models'
export type * from './prismaNamespace'

export const Decimal = runtime.Decimal


export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.DbNull),
  JsonNull: runtime.objectEnumValues.classes.JsonNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.JsonNull),
  AnyNull: runtime.objectEnumValues.classes.AnyNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.AnyNull),
}
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull


export const ModelName = {
  Creator: 'Creator',
  ModelType: 'ModelType',
  Model: 'Model',
  Tag: 'Tag',
  BaseModel: 'BaseModel',
  BaseModelType: 'BaseModelType',
  ModelVersion: 'ModelVersion',
  ModelVersionFile: 'ModelVersionFile',
  ModelVersionImage: 'ModelVersionImage'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const CreatorScalarFieldEnum = {
  id: 'id',
  username: 'username',
  link: 'link',
  image: 'image'
} as const

export type CreatorScalarFieldEnum = (typeof CreatorScalarFieldEnum)[keyof typeof CreatorScalarFieldEnum]


export const ModelTypeScalarFieldEnum = {
  id: 'id',
  name: 'name'
} as const

export type ModelTypeScalarFieldEnum = (typeof ModelTypeScalarFieldEnum)[keyof typeof ModelTypeScalarFieldEnum]


export const ModelScalarFieldEnum = {
  id: 'id',
  name: 'name',
  creatorId: 'creatorId',
  typeId: 'typeId',
  nsfw: 'nsfw',
  nsfwLevel: 'nsfwLevel',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  previewFile: 'previewFile'
} as const

export type ModelScalarFieldEnum = (typeof ModelScalarFieldEnum)[keyof typeof ModelScalarFieldEnum]


export const TagScalarFieldEnum = {
  id: 'id',
  name: 'name'
} as const

export type TagScalarFieldEnum = (typeof TagScalarFieldEnum)[keyof typeof TagScalarFieldEnum]


export const BaseModelScalarFieldEnum = {
  id: 'id',
  name: 'name'
} as const

export type BaseModelScalarFieldEnum = (typeof BaseModelScalarFieldEnum)[keyof typeof BaseModelScalarFieldEnum]


export const BaseModelTypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  baseModelId: 'baseModelId'
} as const

export type BaseModelTypeScalarFieldEnum = (typeof BaseModelTypeScalarFieldEnum)[keyof typeof BaseModelTypeScalarFieldEnum]


export const ModelVersionScalarFieldEnum = {
  id: 'id',
  modelId: 'modelId',
  name: 'name',
  baseModelId: 'baseModelId',
  baseModelTypeId: 'baseModelTypeId',
  publishedAt: 'publishedAt',
  nsfwLevel: 'nsfwLevel',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ModelVersionScalarFieldEnum = (typeof ModelVersionScalarFieldEnum)[keyof typeof ModelVersionScalarFieldEnum]


export const ModelVersionFileScalarFieldEnum = {
  id: 'id',
  sizeKB: 'sizeKB',
  name: 'name',
  type: 'type',
  downloadUrl: 'downloadUrl',
  modelVersionId: 'modelVersionId'
} as const

export type ModelVersionFileScalarFieldEnum = (typeof ModelVersionFileScalarFieldEnum)[keyof typeof ModelVersionFileScalarFieldEnum]


export const ModelVersionImageScalarFieldEnum = {
  id: 'id',
  url: 'url',
  nsfwLevel: 'nsfwLevel',
  width: 'width',
  height: 'height',
  hash: 'hash',
  type: 'type',
  modelVersionId: 'modelVersionId'
} as const

export type ModelVersionImageScalarFieldEnum = (typeof ModelVersionImageScalarFieldEnum)[keyof typeof ModelVersionImageScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]

