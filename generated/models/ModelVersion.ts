
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `ModelVersion` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ModelVersion
 * 
 */
export type ModelVersionModel = runtime.Types.Result.DefaultSelection<Prisma.$ModelVersionPayload>

export type AggregateModelVersion = {
  _count: ModelVersionCountAggregateOutputType | null
  _avg: ModelVersionAvgAggregateOutputType | null
  _sum: ModelVersionSumAggregateOutputType | null
  _min: ModelVersionMinAggregateOutputType | null
  _max: ModelVersionMaxAggregateOutputType | null
}

export type ModelVersionAvgAggregateOutputType = {
  id: number | null
  modelId: number | null
  baseModelId: number | null
  baseModelTypeId: number | null
  nsfwLevel: number | null
}

export type ModelVersionSumAggregateOutputType = {
  id: number | null
  modelId: number | null
  baseModelId: number | null
  baseModelTypeId: number | null
  nsfwLevel: number | null
}

export type ModelVersionMinAggregateOutputType = {
  id: number | null
  modelId: number | null
  name: string | null
  baseModelId: number | null
  baseModelTypeId: number | null
  publishedAt: Date | null
  nsfwLevel: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ModelVersionMaxAggregateOutputType = {
  id: number | null
  modelId: number | null
  name: string | null
  baseModelId: number | null
  baseModelTypeId: number | null
  publishedAt: Date | null
  nsfwLevel: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ModelVersionCountAggregateOutputType = {
  id: number
  modelId: number
  name: number
  baseModelId: number
  baseModelTypeId: number
  publishedAt: number
  nsfwLevel: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ModelVersionAvgAggregateInputType = {
  id?: true
  modelId?: true
  baseModelId?: true
  baseModelTypeId?: true
  nsfwLevel?: true
}

export type ModelVersionSumAggregateInputType = {
  id?: true
  modelId?: true
  baseModelId?: true
  baseModelTypeId?: true
  nsfwLevel?: true
}

export type ModelVersionMinAggregateInputType = {
  id?: true
  modelId?: true
  name?: true
  baseModelId?: true
  baseModelTypeId?: true
  publishedAt?: true
  nsfwLevel?: true
  createdAt?: true
  updatedAt?: true
}

export type ModelVersionMaxAggregateInputType = {
  id?: true
  modelId?: true
  name?: true
  baseModelId?: true
  baseModelTypeId?: true
  publishedAt?: true
  nsfwLevel?: true
  createdAt?: true
  updatedAt?: true
}

export type ModelVersionCountAggregateInputType = {
  id?: true
  modelId?: true
  name?: true
  baseModelId?: true
  baseModelTypeId?: true
  publishedAt?: true
  nsfwLevel?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ModelVersionAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ModelVersion to aggregate.
   */
  where?: Prisma.ModelVersionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ModelVersions to fetch.
   */
  orderBy?: Prisma.ModelVersionOrderByWithRelationInput | Prisma.ModelVersionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ModelVersionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ModelVersions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ModelVersions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ModelVersions
  **/
  _count?: true | ModelVersionCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ModelVersionAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ModelVersionSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ModelVersionMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ModelVersionMaxAggregateInputType
}

export type GetModelVersionAggregateType<T extends ModelVersionAggregateArgs> = {
      [P in keyof T & keyof AggregateModelVersion]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateModelVersion[P]>
    : Prisma.GetScalarType<T[P], AggregateModelVersion[P]>
}




export type ModelVersionGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ModelVersionWhereInput
  orderBy?: Prisma.ModelVersionOrderByWithAggregationInput | Prisma.ModelVersionOrderByWithAggregationInput[]
  by: Prisma.ModelVersionScalarFieldEnum[] | Prisma.ModelVersionScalarFieldEnum
  having?: Prisma.ModelVersionScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ModelVersionCountAggregateInputType | true
  _avg?: ModelVersionAvgAggregateInputType
  _sum?: ModelVersionSumAggregateInputType
  _min?: ModelVersionMinAggregateInputType
  _max?: ModelVersionMaxAggregateInputType
}

export type ModelVersionGroupByOutputType = {
  id: number
  modelId: number
  name: string
  baseModelId: number
  baseModelTypeId: number | null
  publishedAt: Date | null
  nsfwLevel: number
  createdAt: Date
  updatedAt: Date
  _count: ModelVersionCountAggregateOutputType | null
  _avg: ModelVersionAvgAggregateOutputType | null
  _sum: ModelVersionSumAggregateOutputType | null
  _min: ModelVersionMinAggregateOutputType | null
  _max: ModelVersionMaxAggregateOutputType | null
}

type GetModelVersionGroupByPayload<T extends ModelVersionGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ModelVersionGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ModelVersionGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ModelVersionGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ModelVersionGroupByOutputType[P]>
      }
    >
  >



export type ModelVersionWhereInput = {
  AND?: Prisma.ModelVersionWhereInput | Prisma.ModelVersionWhereInput[]
  OR?: Prisma.ModelVersionWhereInput[]
  NOT?: Prisma.ModelVersionWhereInput | Prisma.ModelVersionWhereInput[]
  id?: Prisma.IntFilter<"ModelVersion"> | number
  modelId?: Prisma.IntFilter<"ModelVersion"> | number
  name?: Prisma.StringFilter<"ModelVersion"> | string
  baseModelId?: Prisma.IntFilter<"ModelVersion"> | number
  baseModelTypeId?: Prisma.IntNullableFilter<"ModelVersion"> | number | null
  publishedAt?: Prisma.DateTimeNullableFilter<"ModelVersion"> | Date | string | null
  nsfwLevel?: Prisma.IntFilter<"ModelVersion"> | number
  createdAt?: Prisma.DateTimeFilter<"ModelVersion"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ModelVersion"> | Date | string
  model?: Prisma.XOR<Prisma.ModelScalarRelationFilter, Prisma.ModelWhereInput>
  baseModel?: Prisma.XOR<Prisma.BaseModelScalarRelationFilter, Prisma.BaseModelWhereInput>
  baseModelType?: Prisma.XOR<Prisma.BaseModelTypeNullableScalarRelationFilter, Prisma.BaseModelTypeWhereInput> | null
  files?: Prisma.ModelVersionFileListRelationFilter
  images?: Prisma.ModelVersionImageListRelationFilter
}

export type ModelVersionOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  modelId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  baseModelId?: Prisma.SortOrder
  baseModelTypeId?: Prisma.SortOrderInput | Prisma.SortOrder
  publishedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  nsfwLevel?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  model?: Prisma.ModelOrderByWithRelationInput
  baseModel?: Prisma.BaseModelOrderByWithRelationInput
  baseModelType?: Prisma.BaseModelTypeOrderByWithRelationInput
  files?: Prisma.ModelVersionFileOrderByRelationAggregateInput
  images?: Prisma.ModelVersionImageOrderByRelationAggregateInput
}

export type ModelVersionWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.ModelVersionWhereInput | Prisma.ModelVersionWhereInput[]
  OR?: Prisma.ModelVersionWhereInput[]
  NOT?: Prisma.ModelVersionWhereInput | Prisma.ModelVersionWhereInput[]
  modelId?: Prisma.IntFilter<"ModelVersion"> | number
  name?: Prisma.StringFilter<"ModelVersion"> | string
  baseModelId?: Prisma.IntFilter<"ModelVersion"> | number
  baseModelTypeId?: Prisma.IntNullableFilter<"ModelVersion"> | number | null
  publishedAt?: Prisma.DateTimeNullableFilter<"ModelVersion"> | Date | string | null
  nsfwLevel?: Prisma.IntFilter<"ModelVersion"> | number
  createdAt?: Prisma.DateTimeFilter<"ModelVersion"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ModelVersion"> | Date | string
  model?: Prisma.XOR<Prisma.ModelScalarRelationFilter, Prisma.ModelWhereInput>
  baseModel?: Prisma.XOR<Prisma.BaseModelScalarRelationFilter, Prisma.BaseModelWhereInput>
  baseModelType?: Prisma.XOR<Prisma.BaseModelTypeNullableScalarRelationFilter, Prisma.BaseModelTypeWhereInput> | null
  files?: Prisma.ModelVersionFileListRelationFilter
  images?: Prisma.ModelVersionImageListRelationFilter
}, "id">

export type ModelVersionOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  modelId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  baseModelId?: Prisma.SortOrder
  baseModelTypeId?: Prisma.SortOrderInput | Prisma.SortOrder
  publishedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  nsfwLevel?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ModelVersionCountOrderByAggregateInput
  _avg?: Prisma.ModelVersionAvgOrderByAggregateInput
  _max?: Prisma.ModelVersionMaxOrderByAggregateInput
  _min?: Prisma.ModelVersionMinOrderByAggregateInput
  _sum?: Prisma.ModelVersionSumOrderByAggregateInput
}

export type ModelVersionScalarWhereWithAggregatesInput = {
  AND?: Prisma.ModelVersionScalarWhereWithAggregatesInput | Prisma.ModelVersionScalarWhereWithAggregatesInput[]
  OR?: Prisma.ModelVersionScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ModelVersionScalarWhereWithAggregatesInput | Prisma.ModelVersionScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"ModelVersion"> | number
  modelId?: Prisma.IntWithAggregatesFilter<"ModelVersion"> | number
  name?: Prisma.StringWithAggregatesFilter<"ModelVersion"> | string
  baseModelId?: Prisma.IntWithAggregatesFilter<"ModelVersion"> | number
  baseModelTypeId?: Prisma.IntNullableWithAggregatesFilter<"ModelVersion"> | number | null
  publishedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"ModelVersion"> | Date | string | null
  nsfwLevel?: Prisma.IntWithAggregatesFilter<"ModelVersion"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ModelVersion"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ModelVersion"> | Date | string
}

export type ModelVersionCreateInput = {
  id: number
  name: string
  publishedAt?: Date | string | null
  nsfwLevel: number
  createdAt?: Date | string
  updatedAt?: Date | string
  model: Prisma.ModelCreateNestedOneWithoutModelVersionsInput
  baseModel: Prisma.BaseModelCreateNestedOneWithoutModelVersionsInput
  baseModelType?: Prisma.BaseModelTypeCreateNestedOneWithoutModelVersionsInput
  files?: Prisma.ModelVersionFileCreateNestedManyWithoutModelVersionInput
  images?: Prisma.ModelVersionImageCreateNestedManyWithoutModelVersionInput
}

export type ModelVersionUncheckedCreateInput = {
  id: number
  modelId: number
  name: string
  baseModelId: number
  baseModelTypeId?: number | null
  publishedAt?: Date | string | null
  nsfwLevel: number
  createdAt?: Date | string
  updatedAt?: Date | string
  files?: Prisma.ModelVersionFileUncheckedCreateNestedManyWithoutModelVersionInput
  images?: Prisma.ModelVersionImageUncheckedCreateNestedManyWithoutModelVersionInput
}

export type ModelVersionUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  nsfwLevel?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  model?: Prisma.ModelUpdateOneRequiredWithoutModelVersionsNestedInput
  baseModel?: Prisma.BaseModelUpdateOneRequiredWithoutModelVersionsNestedInput
  baseModelType?: Prisma.BaseModelTypeUpdateOneWithoutModelVersionsNestedInput
  files?: Prisma.ModelVersionFileUpdateManyWithoutModelVersionNestedInput
  images?: Prisma.ModelVersionImageUpdateManyWithoutModelVersionNestedInput
}

export type ModelVersionUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  modelId?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  baseModelId?: Prisma.IntFieldUpdateOperationsInput | number
  baseModelTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  nsfwLevel?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  files?: Prisma.ModelVersionFileUncheckedUpdateManyWithoutModelVersionNestedInput
  images?: Prisma.ModelVersionImageUncheckedUpdateManyWithoutModelVersionNestedInput
}

export type ModelVersionCreateManyInput = {
  id: number
  modelId: number
  name: string
  baseModelId: number
  baseModelTypeId?: number | null
  publishedAt?: Date | string | null
  nsfwLevel: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ModelVersionUpdateManyMutationInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  nsfwLevel?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ModelVersionUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  modelId?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  baseModelId?: Prisma.IntFieldUpdateOperationsInput | number
  baseModelTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  nsfwLevel?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ModelVersionListRelationFilter = {
  every?: Prisma.ModelVersionWhereInput
  some?: Prisma.ModelVersionWhereInput
  none?: Prisma.ModelVersionWhereInput
}

export type ModelVersionOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ModelVersionCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  modelId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  baseModelId?: Prisma.SortOrder
  baseModelTypeId?: Prisma.SortOrder
  publishedAt?: Prisma.SortOrder
  nsfwLevel?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ModelVersionAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  modelId?: Prisma.SortOrder
  baseModelId?: Prisma.SortOrder
  baseModelTypeId?: Prisma.SortOrder
  nsfwLevel?: Prisma.SortOrder
}

export type ModelVersionMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  modelId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  baseModelId?: Prisma.SortOrder
  baseModelTypeId?: Prisma.SortOrder
  publishedAt?: Prisma.SortOrder
  nsfwLevel?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ModelVersionMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  modelId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  baseModelId?: Prisma.SortOrder
  baseModelTypeId?: Prisma.SortOrder
  publishedAt?: Prisma.SortOrder
  nsfwLevel?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ModelVersionSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  modelId?: Prisma.SortOrder
  baseModelId?: Prisma.SortOrder
  baseModelTypeId?: Prisma.SortOrder
  nsfwLevel?: Prisma.SortOrder
}

export type ModelVersionScalarRelationFilter = {
  is?: Prisma.ModelVersionWhereInput
  isNot?: Prisma.ModelVersionWhereInput
}

export type ModelVersionCreateNestedManyWithoutModelInput = {
  create?: Prisma.XOR<Prisma.ModelVersionCreateWithoutModelInput, Prisma.ModelVersionUncheckedCreateWithoutModelInput> | Prisma.ModelVersionCreateWithoutModelInput[] | Prisma.ModelVersionUncheckedCreateWithoutModelInput[]
  connectOrCreate?: Prisma.ModelVersionCreateOrConnectWithoutModelInput | Prisma.ModelVersionCreateOrConnectWithoutModelInput[]
  createMany?: Prisma.ModelVersionCreateManyModelInputEnvelope
  connect?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
}

export type ModelVersionUncheckedCreateNestedManyWithoutModelInput = {
  create?: Prisma.XOR<Prisma.ModelVersionCreateWithoutModelInput, Prisma.ModelVersionUncheckedCreateWithoutModelInput> | Prisma.ModelVersionCreateWithoutModelInput[] | Prisma.ModelVersionUncheckedCreateWithoutModelInput[]
  connectOrCreate?: Prisma.ModelVersionCreateOrConnectWithoutModelInput | Prisma.ModelVersionCreateOrConnectWithoutModelInput[]
  createMany?: Prisma.ModelVersionCreateManyModelInputEnvelope
  connect?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
}

export type ModelVersionUpdateManyWithoutModelNestedInput = {
  create?: Prisma.XOR<Prisma.ModelVersionCreateWithoutModelInput, Prisma.ModelVersionUncheckedCreateWithoutModelInput> | Prisma.ModelVersionCreateWithoutModelInput[] | Prisma.ModelVersionUncheckedCreateWithoutModelInput[]
  connectOrCreate?: Prisma.ModelVersionCreateOrConnectWithoutModelInput | Prisma.ModelVersionCreateOrConnectWithoutModelInput[]
  upsert?: Prisma.ModelVersionUpsertWithWhereUniqueWithoutModelInput | Prisma.ModelVersionUpsertWithWhereUniqueWithoutModelInput[]
  createMany?: Prisma.ModelVersionCreateManyModelInputEnvelope
  set?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  disconnect?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  delete?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  connect?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  update?: Prisma.ModelVersionUpdateWithWhereUniqueWithoutModelInput | Prisma.ModelVersionUpdateWithWhereUniqueWithoutModelInput[]
  updateMany?: Prisma.ModelVersionUpdateManyWithWhereWithoutModelInput | Prisma.ModelVersionUpdateManyWithWhereWithoutModelInput[]
  deleteMany?: Prisma.ModelVersionScalarWhereInput | Prisma.ModelVersionScalarWhereInput[]
}

export type ModelVersionUncheckedUpdateManyWithoutModelNestedInput = {
  create?: Prisma.XOR<Prisma.ModelVersionCreateWithoutModelInput, Prisma.ModelVersionUncheckedCreateWithoutModelInput> | Prisma.ModelVersionCreateWithoutModelInput[] | Prisma.ModelVersionUncheckedCreateWithoutModelInput[]
  connectOrCreate?: Prisma.ModelVersionCreateOrConnectWithoutModelInput | Prisma.ModelVersionCreateOrConnectWithoutModelInput[]
  upsert?: Prisma.ModelVersionUpsertWithWhereUniqueWithoutModelInput | Prisma.ModelVersionUpsertWithWhereUniqueWithoutModelInput[]
  createMany?: Prisma.ModelVersionCreateManyModelInputEnvelope
  set?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  disconnect?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  delete?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  connect?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  update?: Prisma.ModelVersionUpdateWithWhereUniqueWithoutModelInput | Prisma.ModelVersionUpdateWithWhereUniqueWithoutModelInput[]
  updateMany?: Prisma.ModelVersionUpdateManyWithWhereWithoutModelInput | Prisma.ModelVersionUpdateManyWithWhereWithoutModelInput[]
  deleteMany?: Prisma.ModelVersionScalarWhereInput | Prisma.ModelVersionScalarWhereInput[]
}

export type ModelVersionCreateNestedManyWithoutBaseModelInput = {
  create?: Prisma.XOR<Prisma.ModelVersionCreateWithoutBaseModelInput, Prisma.ModelVersionUncheckedCreateWithoutBaseModelInput> | Prisma.ModelVersionCreateWithoutBaseModelInput[] | Prisma.ModelVersionUncheckedCreateWithoutBaseModelInput[]
  connectOrCreate?: Prisma.ModelVersionCreateOrConnectWithoutBaseModelInput | Prisma.ModelVersionCreateOrConnectWithoutBaseModelInput[]
  createMany?: Prisma.ModelVersionCreateManyBaseModelInputEnvelope
  connect?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
}

export type ModelVersionUncheckedCreateNestedManyWithoutBaseModelInput = {
  create?: Prisma.XOR<Prisma.ModelVersionCreateWithoutBaseModelInput, Prisma.ModelVersionUncheckedCreateWithoutBaseModelInput> | Prisma.ModelVersionCreateWithoutBaseModelInput[] | Prisma.ModelVersionUncheckedCreateWithoutBaseModelInput[]
  connectOrCreate?: Prisma.ModelVersionCreateOrConnectWithoutBaseModelInput | Prisma.ModelVersionCreateOrConnectWithoutBaseModelInput[]
  createMany?: Prisma.ModelVersionCreateManyBaseModelInputEnvelope
  connect?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
}

export type ModelVersionUpdateManyWithoutBaseModelNestedInput = {
  create?: Prisma.XOR<Prisma.ModelVersionCreateWithoutBaseModelInput, Prisma.ModelVersionUncheckedCreateWithoutBaseModelInput> | Prisma.ModelVersionCreateWithoutBaseModelInput[] | Prisma.ModelVersionUncheckedCreateWithoutBaseModelInput[]
  connectOrCreate?: Prisma.ModelVersionCreateOrConnectWithoutBaseModelInput | Prisma.ModelVersionCreateOrConnectWithoutBaseModelInput[]
  upsert?: Prisma.ModelVersionUpsertWithWhereUniqueWithoutBaseModelInput | Prisma.ModelVersionUpsertWithWhereUniqueWithoutBaseModelInput[]
  createMany?: Prisma.ModelVersionCreateManyBaseModelInputEnvelope
  set?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  disconnect?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  delete?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  connect?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  update?: Prisma.ModelVersionUpdateWithWhereUniqueWithoutBaseModelInput | Prisma.ModelVersionUpdateWithWhereUniqueWithoutBaseModelInput[]
  updateMany?: Prisma.ModelVersionUpdateManyWithWhereWithoutBaseModelInput | Prisma.ModelVersionUpdateManyWithWhereWithoutBaseModelInput[]
  deleteMany?: Prisma.ModelVersionScalarWhereInput | Prisma.ModelVersionScalarWhereInput[]
}

export type ModelVersionUncheckedUpdateManyWithoutBaseModelNestedInput = {
  create?: Prisma.XOR<Prisma.ModelVersionCreateWithoutBaseModelInput, Prisma.ModelVersionUncheckedCreateWithoutBaseModelInput> | Prisma.ModelVersionCreateWithoutBaseModelInput[] | Prisma.ModelVersionUncheckedCreateWithoutBaseModelInput[]
  connectOrCreate?: Prisma.ModelVersionCreateOrConnectWithoutBaseModelInput | Prisma.ModelVersionCreateOrConnectWithoutBaseModelInput[]
  upsert?: Prisma.ModelVersionUpsertWithWhereUniqueWithoutBaseModelInput | Prisma.ModelVersionUpsertWithWhereUniqueWithoutBaseModelInput[]
  createMany?: Prisma.ModelVersionCreateManyBaseModelInputEnvelope
  set?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  disconnect?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  delete?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  connect?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  update?: Prisma.ModelVersionUpdateWithWhereUniqueWithoutBaseModelInput | Prisma.ModelVersionUpdateWithWhereUniqueWithoutBaseModelInput[]
  updateMany?: Prisma.ModelVersionUpdateManyWithWhereWithoutBaseModelInput | Prisma.ModelVersionUpdateManyWithWhereWithoutBaseModelInput[]
  deleteMany?: Prisma.ModelVersionScalarWhereInput | Prisma.ModelVersionScalarWhereInput[]
}

export type ModelVersionCreateNestedManyWithoutBaseModelTypeInput = {
  create?: Prisma.XOR<Prisma.ModelVersionCreateWithoutBaseModelTypeInput, Prisma.ModelVersionUncheckedCreateWithoutBaseModelTypeInput> | Prisma.ModelVersionCreateWithoutBaseModelTypeInput[] | Prisma.ModelVersionUncheckedCreateWithoutBaseModelTypeInput[]
  connectOrCreate?: Prisma.ModelVersionCreateOrConnectWithoutBaseModelTypeInput | Prisma.ModelVersionCreateOrConnectWithoutBaseModelTypeInput[]
  createMany?: Prisma.ModelVersionCreateManyBaseModelTypeInputEnvelope
  connect?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
}

export type ModelVersionUncheckedCreateNestedManyWithoutBaseModelTypeInput = {
  create?: Prisma.XOR<Prisma.ModelVersionCreateWithoutBaseModelTypeInput, Prisma.ModelVersionUncheckedCreateWithoutBaseModelTypeInput> | Prisma.ModelVersionCreateWithoutBaseModelTypeInput[] | Prisma.ModelVersionUncheckedCreateWithoutBaseModelTypeInput[]
  connectOrCreate?: Prisma.ModelVersionCreateOrConnectWithoutBaseModelTypeInput | Prisma.ModelVersionCreateOrConnectWithoutBaseModelTypeInput[]
  createMany?: Prisma.ModelVersionCreateManyBaseModelTypeInputEnvelope
  connect?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
}

export type ModelVersionUpdateManyWithoutBaseModelTypeNestedInput = {
  create?: Prisma.XOR<Prisma.ModelVersionCreateWithoutBaseModelTypeInput, Prisma.ModelVersionUncheckedCreateWithoutBaseModelTypeInput> | Prisma.ModelVersionCreateWithoutBaseModelTypeInput[] | Prisma.ModelVersionUncheckedCreateWithoutBaseModelTypeInput[]
  connectOrCreate?: Prisma.ModelVersionCreateOrConnectWithoutBaseModelTypeInput | Prisma.ModelVersionCreateOrConnectWithoutBaseModelTypeInput[]
  upsert?: Prisma.ModelVersionUpsertWithWhereUniqueWithoutBaseModelTypeInput | Prisma.ModelVersionUpsertWithWhereUniqueWithoutBaseModelTypeInput[]
  createMany?: Prisma.ModelVersionCreateManyBaseModelTypeInputEnvelope
  set?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  disconnect?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  delete?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  connect?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  update?: Prisma.ModelVersionUpdateWithWhereUniqueWithoutBaseModelTypeInput | Prisma.ModelVersionUpdateWithWhereUniqueWithoutBaseModelTypeInput[]
  updateMany?: Prisma.ModelVersionUpdateManyWithWhereWithoutBaseModelTypeInput | Prisma.ModelVersionUpdateManyWithWhereWithoutBaseModelTypeInput[]
  deleteMany?: Prisma.ModelVersionScalarWhereInput | Prisma.ModelVersionScalarWhereInput[]
}

export type ModelVersionUncheckedUpdateManyWithoutBaseModelTypeNestedInput = {
  create?: Prisma.XOR<Prisma.ModelVersionCreateWithoutBaseModelTypeInput, Prisma.ModelVersionUncheckedCreateWithoutBaseModelTypeInput> | Prisma.ModelVersionCreateWithoutBaseModelTypeInput[] | Prisma.ModelVersionUncheckedCreateWithoutBaseModelTypeInput[]
  connectOrCreate?: Prisma.ModelVersionCreateOrConnectWithoutBaseModelTypeInput | Prisma.ModelVersionCreateOrConnectWithoutBaseModelTypeInput[]
  upsert?: Prisma.ModelVersionUpsertWithWhereUniqueWithoutBaseModelTypeInput | Prisma.ModelVersionUpsertWithWhereUniqueWithoutBaseModelTypeInput[]
  createMany?: Prisma.ModelVersionCreateManyBaseModelTypeInputEnvelope
  set?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  disconnect?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  delete?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  connect?: Prisma.ModelVersionWhereUniqueInput | Prisma.ModelVersionWhereUniqueInput[]
  update?: Prisma.ModelVersionUpdateWithWhereUniqueWithoutBaseModelTypeInput | Prisma.ModelVersionUpdateWithWhereUniqueWithoutBaseModelTypeInput[]
  updateMany?: Prisma.ModelVersionUpdateManyWithWhereWithoutBaseModelTypeInput | Prisma.ModelVersionUpdateManyWithWhereWithoutBaseModelTypeInput[]
  deleteMany?: Prisma.ModelVersionScalarWhereInput | Prisma.ModelVersionScalarWhereInput[]
}

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: Date | string | null
}

export type ModelVersionCreateNestedOneWithoutFilesInput = {
  create?: Prisma.XOR<Prisma.ModelVersionCreateWithoutFilesInput, Prisma.ModelVersionUncheckedCreateWithoutFilesInput>
  connectOrCreate?: Prisma.ModelVersionCreateOrConnectWithoutFilesInput
  connect?: Prisma.ModelVersionWhereUniqueInput
}

export type ModelVersionUpdateOneRequiredWithoutFilesNestedInput = {
  create?: Prisma.XOR<Prisma.ModelVersionCreateWithoutFilesInput, Prisma.ModelVersionUncheckedCreateWithoutFilesInput>
  connectOrCreate?: Prisma.ModelVersionCreateOrConnectWithoutFilesInput
  upsert?: Prisma.ModelVersionUpsertWithoutFilesInput
  connect?: Prisma.ModelVersionWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ModelVersionUpdateToOneWithWhereWithoutFilesInput, Prisma.ModelVersionUpdateWithoutFilesInput>, Prisma.ModelVersionUncheckedUpdateWithoutFilesInput>
}

export type ModelVersionCreateNestedOneWithoutImagesInput = {
  create?: Prisma.XOR<Prisma.ModelVersionCreateWithoutImagesInput, Prisma.ModelVersionUncheckedCreateWithoutImagesInput>
  connectOrCreate?: Prisma.ModelVersionCreateOrConnectWithoutImagesInput
  connect?: Prisma.ModelVersionWhereUniqueInput
}

export type ModelVersionUpdateOneRequiredWithoutImagesNestedInput = {
  create?: Prisma.XOR<Prisma.ModelVersionCreateWithoutImagesInput, Prisma.ModelVersionUncheckedCreateWithoutImagesInput>
  connectOrCreate?: Prisma.ModelVersionCreateOrConnectWithoutImagesInput
  upsert?: Prisma.ModelVersionUpsertWithoutImagesInput
  connect?: Prisma.ModelVersionWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ModelVersionUpdateToOneWithWhereWithoutImagesInput, Prisma.ModelVersionUpdateWithoutImagesInput>, Prisma.ModelVersionUncheckedUpdateWithoutImagesInput>
}

export type ModelVersionCreateWithoutModelInput = {
  id: number
  name: string
  publishedAt?: Date | string | null
  nsfwLevel: number
  createdAt?: Date | string
  updatedAt?: Date | string
  baseModel: Prisma.BaseModelCreateNestedOneWithoutModelVersionsInput
  baseModelType?: Prisma.BaseModelTypeCreateNestedOneWithoutModelVersionsInput
  files?: Prisma.ModelVersionFileCreateNestedManyWithoutModelVersionInput
  images?: Prisma.ModelVersionImageCreateNestedManyWithoutModelVersionInput
}

export type ModelVersionUncheckedCreateWithoutModelInput = {
  id: number
  name: string
  baseModelId: number
  baseModelTypeId?: number | null
  publishedAt?: Date | string | null
  nsfwLevel: number
  createdAt?: Date | string
  updatedAt?: Date | string
  files?: Prisma.ModelVersionFileUncheckedCreateNestedManyWithoutModelVersionInput
  images?: Prisma.ModelVersionImageUncheckedCreateNestedManyWithoutModelVersionInput
}

export type ModelVersionCreateOrConnectWithoutModelInput = {
  where: Prisma.ModelVersionWhereUniqueInput
  create: Prisma.XOR<Prisma.ModelVersionCreateWithoutModelInput, Prisma.ModelVersionUncheckedCreateWithoutModelInput>
}

export type ModelVersionCreateManyModelInputEnvelope = {
  data: Prisma.ModelVersionCreateManyModelInput | Prisma.ModelVersionCreateManyModelInput[]
}

export type ModelVersionUpsertWithWhereUniqueWithoutModelInput = {
  where: Prisma.ModelVersionWhereUniqueInput
  update: Prisma.XOR<Prisma.ModelVersionUpdateWithoutModelInput, Prisma.ModelVersionUncheckedUpdateWithoutModelInput>
  create: Prisma.XOR<Prisma.ModelVersionCreateWithoutModelInput, Prisma.ModelVersionUncheckedCreateWithoutModelInput>
}

export type ModelVersionUpdateWithWhereUniqueWithoutModelInput = {
  where: Prisma.ModelVersionWhereUniqueInput
  data: Prisma.XOR<Prisma.ModelVersionUpdateWithoutModelInput, Prisma.ModelVersionUncheckedUpdateWithoutModelInput>
}

export type ModelVersionUpdateManyWithWhereWithoutModelInput = {
  where: Prisma.ModelVersionScalarWhereInput
  data: Prisma.XOR<Prisma.ModelVersionUpdateManyMutationInput, Prisma.ModelVersionUncheckedUpdateManyWithoutModelInput>
}

export type ModelVersionScalarWhereInput = {
  AND?: Prisma.ModelVersionScalarWhereInput | Prisma.ModelVersionScalarWhereInput[]
  OR?: Prisma.ModelVersionScalarWhereInput[]
  NOT?: Prisma.ModelVersionScalarWhereInput | Prisma.ModelVersionScalarWhereInput[]
  id?: Prisma.IntFilter<"ModelVersion"> | number
  modelId?: Prisma.IntFilter<"ModelVersion"> | number
  name?: Prisma.StringFilter<"ModelVersion"> | string
  baseModelId?: Prisma.IntFilter<"ModelVersion"> | number
  baseModelTypeId?: Prisma.IntNullableFilter<"ModelVersion"> | number | null
  publishedAt?: Prisma.DateTimeNullableFilter<"ModelVersion"> | Date | string | null
  nsfwLevel?: Prisma.IntFilter<"ModelVersion"> | number
  createdAt?: Prisma.DateTimeFilter<"ModelVersion"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ModelVersion"> | Date | string
}

export type ModelVersionCreateWithoutBaseModelInput = {
  id: number
  name: string
  publishedAt?: Date | string | null
  nsfwLevel: number
  createdAt?: Date | string
  updatedAt?: Date | string
  model: Prisma.ModelCreateNestedOneWithoutModelVersionsInput
  baseModelType?: Prisma.BaseModelTypeCreateNestedOneWithoutModelVersionsInput
  files?: Prisma.ModelVersionFileCreateNestedManyWithoutModelVersionInput
  images?: Prisma.ModelVersionImageCreateNestedManyWithoutModelVersionInput
}

export type ModelVersionUncheckedCreateWithoutBaseModelInput = {
  id: number
  modelId: number
  name: string
  baseModelTypeId?: number | null
  publishedAt?: Date | string | null
  nsfwLevel: number
  createdAt?: Date | string
  updatedAt?: Date | string
  files?: Prisma.ModelVersionFileUncheckedCreateNestedManyWithoutModelVersionInput
  images?: Prisma.ModelVersionImageUncheckedCreateNestedManyWithoutModelVersionInput
}

export type ModelVersionCreateOrConnectWithoutBaseModelInput = {
  where: Prisma.ModelVersionWhereUniqueInput
  create: Prisma.XOR<Prisma.ModelVersionCreateWithoutBaseModelInput, Prisma.ModelVersionUncheckedCreateWithoutBaseModelInput>
}

export type ModelVersionCreateManyBaseModelInputEnvelope = {
  data: Prisma.ModelVersionCreateManyBaseModelInput | Prisma.ModelVersionCreateManyBaseModelInput[]
}

export type ModelVersionUpsertWithWhereUniqueWithoutBaseModelInput = {
  where: Prisma.ModelVersionWhereUniqueInput
  update: Prisma.XOR<Prisma.ModelVersionUpdateWithoutBaseModelInput, Prisma.ModelVersionUncheckedUpdateWithoutBaseModelInput>
  create: Prisma.XOR<Prisma.ModelVersionCreateWithoutBaseModelInput, Prisma.ModelVersionUncheckedCreateWithoutBaseModelInput>
}

export type ModelVersionUpdateWithWhereUniqueWithoutBaseModelInput = {
  where: Prisma.ModelVersionWhereUniqueInput
  data: Prisma.XOR<Prisma.ModelVersionUpdateWithoutBaseModelInput, Prisma.ModelVersionUncheckedUpdateWithoutBaseModelInput>
}

export type ModelVersionUpdateManyWithWhereWithoutBaseModelInput = {
  where: Prisma.ModelVersionScalarWhereInput
  data: Prisma.XOR<Prisma.ModelVersionUpdateManyMutationInput, Prisma.ModelVersionUncheckedUpdateManyWithoutBaseModelInput>
}

export type ModelVersionCreateWithoutBaseModelTypeInput = {
  id: number
  name: string
  publishedAt?: Date | string | null
  nsfwLevel: number
  createdAt?: Date | string
  updatedAt?: Date | string
  model: Prisma.ModelCreateNestedOneWithoutModelVersionsInput
  baseModel: Prisma.BaseModelCreateNestedOneWithoutModelVersionsInput
  files?: Prisma.ModelVersionFileCreateNestedManyWithoutModelVersionInput
  images?: Prisma.ModelVersionImageCreateNestedManyWithoutModelVersionInput
}

export type ModelVersionUncheckedCreateWithoutBaseModelTypeInput = {
  id: number
  modelId: number
  name: string
  baseModelId: number
  publishedAt?: Date | string | null
  nsfwLevel: number
  createdAt?: Date | string
  updatedAt?: Date | string
  files?: Prisma.ModelVersionFileUncheckedCreateNestedManyWithoutModelVersionInput
  images?: Prisma.ModelVersionImageUncheckedCreateNestedManyWithoutModelVersionInput
}

export type ModelVersionCreateOrConnectWithoutBaseModelTypeInput = {
  where: Prisma.ModelVersionWhereUniqueInput
  create: Prisma.XOR<Prisma.ModelVersionCreateWithoutBaseModelTypeInput, Prisma.ModelVersionUncheckedCreateWithoutBaseModelTypeInput>
}

export type ModelVersionCreateManyBaseModelTypeInputEnvelope = {
  data: Prisma.ModelVersionCreateManyBaseModelTypeInput | Prisma.ModelVersionCreateManyBaseModelTypeInput[]
}

export type ModelVersionUpsertWithWhereUniqueWithoutBaseModelTypeInput = {
  where: Prisma.ModelVersionWhereUniqueInput
  update: Prisma.XOR<Prisma.ModelVersionUpdateWithoutBaseModelTypeInput, Prisma.ModelVersionUncheckedUpdateWithoutBaseModelTypeInput>
  create: Prisma.XOR<Prisma.ModelVersionCreateWithoutBaseModelTypeInput, Prisma.ModelVersionUncheckedCreateWithoutBaseModelTypeInput>
}

export type ModelVersionUpdateWithWhereUniqueWithoutBaseModelTypeInput = {
  where: Prisma.ModelVersionWhereUniqueInput
  data: Prisma.XOR<Prisma.ModelVersionUpdateWithoutBaseModelTypeInput, Prisma.ModelVersionUncheckedUpdateWithoutBaseModelTypeInput>
}

export type ModelVersionUpdateManyWithWhereWithoutBaseModelTypeInput = {
  where: Prisma.ModelVersionScalarWhereInput
  data: Prisma.XOR<Prisma.ModelVersionUpdateManyMutationInput, Prisma.ModelVersionUncheckedUpdateManyWithoutBaseModelTypeInput>
}

export type ModelVersionCreateWithoutFilesInput = {
  id: number
  name: string
  publishedAt?: Date | string | null
  nsfwLevel: number
  createdAt?: Date | string
  updatedAt?: Date | string
  model: Prisma.ModelCreateNestedOneWithoutModelVersionsInput
  baseModel: Prisma.BaseModelCreateNestedOneWithoutModelVersionsInput
  baseModelType?: Prisma.BaseModelTypeCreateNestedOneWithoutModelVersionsInput
  images?: Prisma.ModelVersionImageCreateNestedManyWithoutModelVersionInput
}

export type ModelVersionUncheckedCreateWithoutFilesInput = {
  id: number
  modelId: number
  name: string
  baseModelId: number
  baseModelTypeId?: number | null
  publishedAt?: Date | string | null
  nsfwLevel: number
  createdAt?: Date | string
  updatedAt?: Date | string
  images?: Prisma.ModelVersionImageUncheckedCreateNestedManyWithoutModelVersionInput
}

export type ModelVersionCreateOrConnectWithoutFilesInput = {
  where: Prisma.ModelVersionWhereUniqueInput
  create: Prisma.XOR<Prisma.ModelVersionCreateWithoutFilesInput, Prisma.ModelVersionUncheckedCreateWithoutFilesInput>
}

export type ModelVersionUpsertWithoutFilesInput = {
  update: Prisma.XOR<Prisma.ModelVersionUpdateWithoutFilesInput, Prisma.ModelVersionUncheckedUpdateWithoutFilesInput>
  create: Prisma.XOR<Prisma.ModelVersionCreateWithoutFilesInput, Prisma.ModelVersionUncheckedCreateWithoutFilesInput>
  where?: Prisma.ModelVersionWhereInput
}

export type ModelVersionUpdateToOneWithWhereWithoutFilesInput = {
  where?: Prisma.ModelVersionWhereInput
  data: Prisma.XOR<Prisma.ModelVersionUpdateWithoutFilesInput, Prisma.ModelVersionUncheckedUpdateWithoutFilesInput>
}

export type ModelVersionUpdateWithoutFilesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  nsfwLevel?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  model?: Prisma.ModelUpdateOneRequiredWithoutModelVersionsNestedInput
  baseModel?: Prisma.BaseModelUpdateOneRequiredWithoutModelVersionsNestedInput
  baseModelType?: Prisma.BaseModelTypeUpdateOneWithoutModelVersionsNestedInput
  images?: Prisma.ModelVersionImageUpdateManyWithoutModelVersionNestedInput
}

export type ModelVersionUncheckedUpdateWithoutFilesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  modelId?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  baseModelId?: Prisma.IntFieldUpdateOperationsInput | number
  baseModelTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  nsfwLevel?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  images?: Prisma.ModelVersionImageUncheckedUpdateManyWithoutModelVersionNestedInput
}

export type ModelVersionCreateWithoutImagesInput = {
  id: number
  name: string
  publishedAt?: Date | string | null
  nsfwLevel: number
  createdAt?: Date | string
  updatedAt?: Date | string
  model: Prisma.ModelCreateNestedOneWithoutModelVersionsInput
  baseModel: Prisma.BaseModelCreateNestedOneWithoutModelVersionsInput
  baseModelType?: Prisma.BaseModelTypeCreateNestedOneWithoutModelVersionsInput
  files?: Prisma.ModelVersionFileCreateNestedManyWithoutModelVersionInput
}

export type ModelVersionUncheckedCreateWithoutImagesInput = {
  id: number
  modelId: number
  name: string
  baseModelId: number
  baseModelTypeId?: number | null
  publishedAt?: Date | string | null
  nsfwLevel: number
  createdAt?: Date | string
  updatedAt?: Date | string
  files?: Prisma.ModelVersionFileUncheckedCreateNestedManyWithoutModelVersionInput
}

export type ModelVersionCreateOrConnectWithoutImagesInput = {
  where: Prisma.ModelVersionWhereUniqueInput
  create: Prisma.XOR<Prisma.ModelVersionCreateWithoutImagesInput, Prisma.ModelVersionUncheckedCreateWithoutImagesInput>
}

export type ModelVersionUpsertWithoutImagesInput = {
  update: Prisma.XOR<Prisma.ModelVersionUpdateWithoutImagesInput, Prisma.ModelVersionUncheckedUpdateWithoutImagesInput>
  create: Prisma.XOR<Prisma.ModelVersionCreateWithoutImagesInput, Prisma.ModelVersionUncheckedCreateWithoutImagesInput>
  where?: Prisma.ModelVersionWhereInput
}

export type ModelVersionUpdateToOneWithWhereWithoutImagesInput = {
  where?: Prisma.ModelVersionWhereInput
  data: Prisma.XOR<Prisma.ModelVersionUpdateWithoutImagesInput, Prisma.ModelVersionUncheckedUpdateWithoutImagesInput>
}

export type ModelVersionUpdateWithoutImagesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  nsfwLevel?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  model?: Prisma.ModelUpdateOneRequiredWithoutModelVersionsNestedInput
  baseModel?: Prisma.BaseModelUpdateOneRequiredWithoutModelVersionsNestedInput
  baseModelType?: Prisma.BaseModelTypeUpdateOneWithoutModelVersionsNestedInput
  files?: Prisma.ModelVersionFileUpdateManyWithoutModelVersionNestedInput
}

export type ModelVersionUncheckedUpdateWithoutImagesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  modelId?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  baseModelId?: Prisma.IntFieldUpdateOperationsInput | number
  baseModelTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  nsfwLevel?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  files?: Prisma.ModelVersionFileUncheckedUpdateManyWithoutModelVersionNestedInput
}

export type ModelVersionCreateManyModelInput = {
  id: number
  name: string
  baseModelId: number
  baseModelTypeId?: number | null
  publishedAt?: Date | string | null
  nsfwLevel: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ModelVersionUpdateWithoutModelInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  nsfwLevel?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  baseModel?: Prisma.BaseModelUpdateOneRequiredWithoutModelVersionsNestedInput
  baseModelType?: Prisma.BaseModelTypeUpdateOneWithoutModelVersionsNestedInput
  files?: Prisma.ModelVersionFileUpdateManyWithoutModelVersionNestedInput
  images?: Prisma.ModelVersionImageUpdateManyWithoutModelVersionNestedInput
}

export type ModelVersionUncheckedUpdateWithoutModelInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  baseModelId?: Prisma.IntFieldUpdateOperationsInput | number
  baseModelTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  nsfwLevel?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  files?: Prisma.ModelVersionFileUncheckedUpdateManyWithoutModelVersionNestedInput
  images?: Prisma.ModelVersionImageUncheckedUpdateManyWithoutModelVersionNestedInput
}

export type ModelVersionUncheckedUpdateManyWithoutModelInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  baseModelId?: Prisma.IntFieldUpdateOperationsInput | number
  baseModelTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  nsfwLevel?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ModelVersionCreateManyBaseModelInput = {
  id: number
  modelId: number
  name: string
  baseModelTypeId?: number | null
  publishedAt?: Date | string | null
  nsfwLevel: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ModelVersionUpdateWithoutBaseModelInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  nsfwLevel?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  model?: Prisma.ModelUpdateOneRequiredWithoutModelVersionsNestedInput
  baseModelType?: Prisma.BaseModelTypeUpdateOneWithoutModelVersionsNestedInput
  files?: Prisma.ModelVersionFileUpdateManyWithoutModelVersionNestedInput
  images?: Prisma.ModelVersionImageUpdateManyWithoutModelVersionNestedInput
}

export type ModelVersionUncheckedUpdateWithoutBaseModelInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  modelId?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  baseModelTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  nsfwLevel?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  files?: Prisma.ModelVersionFileUncheckedUpdateManyWithoutModelVersionNestedInput
  images?: Prisma.ModelVersionImageUncheckedUpdateManyWithoutModelVersionNestedInput
}

export type ModelVersionUncheckedUpdateManyWithoutBaseModelInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  modelId?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  baseModelTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  nsfwLevel?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ModelVersionCreateManyBaseModelTypeInput = {
  id: number
  modelId: number
  name: string
  baseModelId: number
  publishedAt?: Date | string | null
  nsfwLevel: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ModelVersionUpdateWithoutBaseModelTypeInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  nsfwLevel?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  model?: Prisma.ModelUpdateOneRequiredWithoutModelVersionsNestedInput
  baseModel?: Prisma.BaseModelUpdateOneRequiredWithoutModelVersionsNestedInput
  files?: Prisma.ModelVersionFileUpdateManyWithoutModelVersionNestedInput
  images?: Prisma.ModelVersionImageUpdateManyWithoutModelVersionNestedInput
}

export type ModelVersionUncheckedUpdateWithoutBaseModelTypeInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  modelId?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  baseModelId?: Prisma.IntFieldUpdateOperationsInput | number
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  nsfwLevel?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  files?: Prisma.ModelVersionFileUncheckedUpdateManyWithoutModelVersionNestedInput
  images?: Prisma.ModelVersionImageUncheckedUpdateManyWithoutModelVersionNestedInput
}

export type ModelVersionUncheckedUpdateManyWithoutBaseModelTypeInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  modelId?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  baseModelId?: Prisma.IntFieldUpdateOperationsInput | number
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  nsfwLevel?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type ModelVersionCountOutputType
 */

export type ModelVersionCountOutputType = {
  files: number
  images: number
}

export type ModelVersionCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  files?: boolean | ModelVersionCountOutputTypeCountFilesArgs
  images?: boolean | ModelVersionCountOutputTypeCountImagesArgs
}

/**
 * ModelVersionCountOutputType without action
 */
export type ModelVersionCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModelVersionCountOutputType
   */
  select?: Prisma.ModelVersionCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ModelVersionCountOutputType without action
 */
export type ModelVersionCountOutputTypeCountFilesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ModelVersionFileWhereInput
}

/**
 * ModelVersionCountOutputType without action
 */
export type ModelVersionCountOutputTypeCountImagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ModelVersionImageWhereInput
}


export type ModelVersionSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  modelId?: boolean
  name?: boolean
  baseModelId?: boolean
  baseModelTypeId?: boolean
  publishedAt?: boolean
  nsfwLevel?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  model?: boolean | Prisma.ModelDefaultArgs<ExtArgs>
  baseModel?: boolean | Prisma.BaseModelDefaultArgs<ExtArgs>
  baseModelType?: boolean | Prisma.ModelVersion$baseModelTypeArgs<ExtArgs>
  files?: boolean | Prisma.ModelVersion$filesArgs<ExtArgs>
  images?: boolean | Prisma.ModelVersion$imagesArgs<ExtArgs>
  _count?: boolean | Prisma.ModelVersionCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["modelVersion"]>

export type ModelVersionSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  modelId?: boolean
  name?: boolean
  baseModelId?: boolean
  baseModelTypeId?: boolean
  publishedAt?: boolean
  nsfwLevel?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  model?: boolean | Prisma.ModelDefaultArgs<ExtArgs>
  baseModel?: boolean | Prisma.BaseModelDefaultArgs<ExtArgs>
  baseModelType?: boolean | Prisma.ModelVersion$baseModelTypeArgs<ExtArgs>
}, ExtArgs["result"]["modelVersion"]>

export type ModelVersionSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  modelId?: boolean
  name?: boolean
  baseModelId?: boolean
  baseModelTypeId?: boolean
  publishedAt?: boolean
  nsfwLevel?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  model?: boolean | Prisma.ModelDefaultArgs<ExtArgs>
  baseModel?: boolean | Prisma.BaseModelDefaultArgs<ExtArgs>
  baseModelType?: boolean | Prisma.ModelVersion$baseModelTypeArgs<ExtArgs>
}, ExtArgs["result"]["modelVersion"]>

export type ModelVersionSelectScalar = {
  id?: boolean
  modelId?: boolean
  name?: boolean
  baseModelId?: boolean
  baseModelTypeId?: boolean
  publishedAt?: boolean
  nsfwLevel?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ModelVersionOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "modelId" | "name" | "baseModelId" | "baseModelTypeId" | "publishedAt" | "nsfwLevel" | "createdAt" | "updatedAt", ExtArgs["result"]["modelVersion"]>
export type ModelVersionInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  model?: boolean | Prisma.ModelDefaultArgs<ExtArgs>
  baseModel?: boolean | Prisma.BaseModelDefaultArgs<ExtArgs>
  baseModelType?: boolean | Prisma.ModelVersion$baseModelTypeArgs<ExtArgs>
  files?: boolean | Prisma.ModelVersion$filesArgs<ExtArgs>
  images?: boolean | Prisma.ModelVersion$imagesArgs<ExtArgs>
  _count?: boolean | Prisma.ModelVersionCountOutputTypeDefaultArgs<ExtArgs>
}
export type ModelVersionIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  model?: boolean | Prisma.ModelDefaultArgs<ExtArgs>
  baseModel?: boolean | Prisma.BaseModelDefaultArgs<ExtArgs>
  baseModelType?: boolean | Prisma.ModelVersion$baseModelTypeArgs<ExtArgs>
}
export type ModelVersionIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  model?: boolean | Prisma.ModelDefaultArgs<ExtArgs>
  baseModel?: boolean | Prisma.BaseModelDefaultArgs<ExtArgs>
  baseModelType?: boolean | Prisma.ModelVersion$baseModelTypeArgs<ExtArgs>
}

export type $ModelVersionPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ModelVersion"
  objects: {
    model: Prisma.$ModelPayload<ExtArgs>
    baseModel: Prisma.$BaseModelPayload<ExtArgs>
    baseModelType: Prisma.$BaseModelTypePayload<ExtArgs> | null
    files: Prisma.$ModelVersionFilePayload<ExtArgs>[]
    images: Prisma.$ModelVersionImagePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    modelId: number
    name: string
    baseModelId: number
    baseModelTypeId: number | null
    publishedAt: Date | null
    nsfwLevel: number
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["modelVersion"]>
  composites: {}
}

export type ModelVersionGetPayload<S extends boolean | null | undefined | ModelVersionDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ModelVersionPayload, S>

export type ModelVersionCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ModelVersionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ModelVersionCountAggregateInputType | true
  }

export interface ModelVersionDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ModelVersion'], meta: { name: 'ModelVersion' } }
  /**
   * Find zero or one ModelVersion that matches the filter.
   * @param {ModelVersionFindUniqueArgs} args - Arguments to find a ModelVersion
   * @example
   * // Get one ModelVersion
   * const modelVersion = await prisma.modelVersion.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ModelVersionFindUniqueArgs>(args: Prisma.SelectSubset<T, ModelVersionFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ModelVersionClient<runtime.Types.Result.GetResult<Prisma.$ModelVersionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ModelVersion that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ModelVersionFindUniqueOrThrowArgs} args - Arguments to find a ModelVersion
   * @example
   * // Get one ModelVersion
   * const modelVersion = await prisma.modelVersion.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ModelVersionFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ModelVersionFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ModelVersionClient<runtime.Types.Result.GetResult<Prisma.$ModelVersionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ModelVersion that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModelVersionFindFirstArgs} args - Arguments to find a ModelVersion
   * @example
   * // Get one ModelVersion
   * const modelVersion = await prisma.modelVersion.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ModelVersionFindFirstArgs>(args?: Prisma.SelectSubset<T, ModelVersionFindFirstArgs<ExtArgs>>): Prisma.Prisma__ModelVersionClient<runtime.Types.Result.GetResult<Prisma.$ModelVersionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ModelVersion that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModelVersionFindFirstOrThrowArgs} args - Arguments to find a ModelVersion
   * @example
   * // Get one ModelVersion
   * const modelVersion = await prisma.modelVersion.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ModelVersionFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ModelVersionFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ModelVersionClient<runtime.Types.Result.GetResult<Prisma.$ModelVersionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ModelVersions that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModelVersionFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ModelVersions
   * const modelVersions = await prisma.modelVersion.findMany()
   * 
   * // Get first 10 ModelVersions
   * const modelVersions = await prisma.modelVersion.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const modelVersionWithIdOnly = await prisma.modelVersion.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ModelVersionFindManyArgs>(args?: Prisma.SelectSubset<T, ModelVersionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ModelVersionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ModelVersion.
   * @param {ModelVersionCreateArgs} args - Arguments to create a ModelVersion.
   * @example
   * // Create one ModelVersion
   * const ModelVersion = await prisma.modelVersion.create({
   *   data: {
   *     // ... data to create a ModelVersion
   *   }
   * })
   * 
   */
  create<T extends ModelVersionCreateArgs>(args: Prisma.SelectSubset<T, ModelVersionCreateArgs<ExtArgs>>): Prisma.Prisma__ModelVersionClient<runtime.Types.Result.GetResult<Prisma.$ModelVersionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ModelVersions.
   * @param {ModelVersionCreateManyArgs} args - Arguments to create many ModelVersions.
   * @example
   * // Create many ModelVersions
   * const modelVersion = await prisma.modelVersion.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ModelVersionCreateManyArgs>(args?: Prisma.SelectSubset<T, ModelVersionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ModelVersions and returns the data saved in the database.
   * @param {ModelVersionCreateManyAndReturnArgs} args - Arguments to create many ModelVersions.
   * @example
   * // Create many ModelVersions
   * const modelVersion = await prisma.modelVersion.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ModelVersions and only return the `id`
   * const modelVersionWithIdOnly = await prisma.modelVersion.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ModelVersionCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ModelVersionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ModelVersionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ModelVersion.
   * @param {ModelVersionDeleteArgs} args - Arguments to delete one ModelVersion.
   * @example
   * // Delete one ModelVersion
   * const ModelVersion = await prisma.modelVersion.delete({
   *   where: {
   *     // ... filter to delete one ModelVersion
   *   }
   * })
   * 
   */
  delete<T extends ModelVersionDeleteArgs>(args: Prisma.SelectSubset<T, ModelVersionDeleteArgs<ExtArgs>>): Prisma.Prisma__ModelVersionClient<runtime.Types.Result.GetResult<Prisma.$ModelVersionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ModelVersion.
   * @param {ModelVersionUpdateArgs} args - Arguments to update one ModelVersion.
   * @example
   * // Update one ModelVersion
   * const modelVersion = await prisma.modelVersion.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ModelVersionUpdateArgs>(args: Prisma.SelectSubset<T, ModelVersionUpdateArgs<ExtArgs>>): Prisma.Prisma__ModelVersionClient<runtime.Types.Result.GetResult<Prisma.$ModelVersionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ModelVersions.
   * @param {ModelVersionDeleteManyArgs} args - Arguments to filter ModelVersions to delete.
   * @example
   * // Delete a few ModelVersions
   * const { count } = await prisma.modelVersion.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ModelVersionDeleteManyArgs>(args?: Prisma.SelectSubset<T, ModelVersionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ModelVersions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModelVersionUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ModelVersions
   * const modelVersion = await prisma.modelVersion.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ModelVersionUpdateManyArgs>(args: Prisma.SelectSubset<T, ModelVersionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ModelVersions and returns the data updated in the database.
   * @param {ModelVersionUpdateManyAndReturnArgs} args - Arguments to update many ModelVersions.
   * @example
   * // Update many ModelVersions
   * const modelVersion = await prisma.modelVersion.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ModelVersions and only return the `id`
   * const modelVersionWithIdOnly = await prisma.modelVersion.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ModelVersionUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ModelVersionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ModelVersionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ModelVersion.
   * @param {ModelVersionUpsertArgs} args - Arguments to update or create a ModelVersion.
   * @example
   * // Update or create a ModelVersion
   * const modelVersion = await prisma.modelVersion.upsert({
   *   create: {
   *     // ... data to create a ModelVersion
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ModelVersion we want to update
   *   }
   * })
   */
  upsert<T extends ModelVersionUpsertArgs>(args: Prisma.SelectSubset<T, ModelVersionUpsertArgs<ExtArgs>>): Prisma.Prisma__ModelVersionClient<runtime.Types.Result.GetResult<Prisma.$ModelVersionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ModelVersions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModelVersionCountArgs} args - Arguments to filter ModelVersions to count.
   * @example
   * // Count the number of ModelVersions
   * const count = await prisma.modelVersion.count({
   *   where: {
   *     // ... the filter for the ModelVersions we want to count
   *   }
   * })
  **/
  count<T extends ModelVersionCountArgs>(
    args?: Prisma.Subset<T, ModelVersionCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ModelVersionCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ModelVersion.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModelVersionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ModelVersionAggregateArgs>(args: Prisma.Subset<T, ModelVersionAggregateArgs>): Prisma.PrismaPromise<GetModelVersionAggregateType<T>>

  /**
   * Group by ModelVersion.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModelVersionGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ModelVersionGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ModelVersionGroupByArgs['orderBy'] }
      : { orderBy?: ModelVersionGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ModelVersionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModelVersionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ModelVersion model
 */
readonly fields: ModelVersionFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ModelVersion.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ModelVersionClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  model<T extends Prisma.ModelDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ModelDefaultArgs<ExtArgs>>): Prisma.Prisma__ModelClient<runtime.Types.Result.GetResult<Prisma.$ModelPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  baseModel<T extends Prisma.BaseModelDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.BaseModelDefaultArgs<ExtArgs>>): Prisma.Prisma__BaseModelClient<runtime.Types.Result.GetResult<Prisma.$BaseModelPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  baseModelType<T extends Prisma.ModelVersion$baseModelTypeArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ModelVersion$baseModelTypeArgs<ExtArgs>>): Prisma.Prisma__BaseModelTypeClient<runtime.Types.Result.GetResult<Prisma.$BaseModelTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  files<T extends Prisma.ModelVersion$filesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ModelVersion$filesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ModelVersionFilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  images<T extends Prisma.ModelVersion$imagesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ModelVersion$imagesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ModelVersionImagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ModelVersion model
 */
export interface ModelVersionFieldRefs {
  readonly id: Prisma.FieldRef<"ModelVersion", 'Int'>
  readonly modelId: Prisma.FieldRef<"ModelVersion", 'Int'>
  readonly name: Prisma.FieldRef<"ModelVersion", 'String'>
  readonly baseModelId: Prisma.FieldRef<"ModelVersion", 'Int'>
  readonly baseModelTypeId: Prisma.FieldRef<"ModelVersion", 'Int'>
  readonly publishedAt: Prisma.FieldRef<"ModelVersion", 'DateTime'>
  readonly nsfwLevel: Prisma.FieldRef<"ModelVersion", 'Int'>
  readonly createdAt: Prisma.FieldRef<"ModelVersion", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ModelVersion", 'DateTime'>
}
    

// Custom InputTypes
/**
 * ModelVersion findUnique
 */
export type ModelVersionFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModelVersion
   */
  select?: Prisma.ModelVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModelVersion
   */
  omit?: Prisma.ModelVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModelVersionInclude<ExtArgs> | null
  /**
   * Filter, which ModelVersion to fetch.
   */
  where: Prisma.ModelVersionWhereUniqueInput
}

/**
 * ModelVersion findUniqueOrThrow
 */
export type ModelVersionFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModelVersion
   */
  select?: Prisma.ModelVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModelVersion
   */
  omit?: Prisma.ModelVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModelVersionInclude<ExtArgs> | null
  /**
   * Filter, which ModelVersion to fetch.
   */
  where: Prisma.ModelVersionWhereUniqueInput
}

/**
 * ModelVersion findFirst
 */
export type ModelVersionFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModelVersion
   */
  select?: Prisma.ModelVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModelVersion
   */
  omit?: Prisma.ModelVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModelVersionInclude<ExtArgs> | null
  /**
   * Filter, which ModelVersion to fetch.
   */
  where?: Prisma.ModelVersionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ModelVersions to fetch.
   */
  orderBy?: Prisma.ModelVersionOrderByWithRelationInput | Prisma.ModelVersionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ModelVersions.
   */
  cursor?: Prisma.ModelVersionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ModelVersions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ModelVersions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ModelVersions.
   */
  distinct?: Prisma.ModelVersionScalarFieldEnum | Prisma.ModelVersionScalarFieldEnum[]
}

/**
 * ModelVersion findFirstOrThrow
 */
export type ModelVersionFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModelVersion
   */
  select?: Prisma.ModelVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModelVersion
   */
  omit?: Prisma.ModelVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModelVersionInclude<ExtArgs> | null
  /**
   * Filter, which ModelVersion to fetch.
   */
  where?: Prisma.ModelVersionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ModelVersions to fetch.
   */
  orderBy?: Prisma.ModelVersionOrderByWithRelationInput | Prisma.ModelVersionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ModelVersions.
   */
  cursor?: Prisma.ModelVersionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ModelVersions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ModelVersions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ModelVersions.
   */
  distinct?: Prisma.ModelVersionScalarFieldEnum | Prisma.ModelVersionScalarFieldEnum[]
}

/**
 * ModelVersion findMany
 */
export type ModelVersionFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModelVersion
   */
  select?: Prisma.ModelVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModelVersion
   */
  omit?: Prisma.ModelVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModelVersionInclude<ExtArgs> | null
  /**
   * Filter, which ModelVersions to fetch.
   */
  where?: Prisma.ModelVersionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ModelVersions to fetch.
   */
  orderBy?: Prisma.ModelVersionOrderByWithRelationInput | Prisma.ModelVersionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ModelVersions.
   */
  cursor?: Prisma.ModelVersionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ModelVersions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ModelVersions.
   */
  skip?: number
  distinct?: Prisma.ModelVersionScalarFieldEnum | Prisma.ModelVersionScalarFieldEnum[]
}

/**
 * ModelVersion create
 */
export type ModelVersionCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModelVersion
   */
  select?: Prisma.ModelVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModelVersion
   */
  omit?: Prisma.ModelVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModelVersionInclude<ExtArgs> | null
  /**
   * The data needed to create a ModelVersion.
   */
  data: Prisma.XOR<Prisma.ModelVersionCreateInput, Prisma.ModelVersionUncheckedCreateInput>
}

/**
 * ModelVersion createMany
 */
export type ModelVersionCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ModelVersions.
   */
  data: Prisma.ModelVersionCreateManyInput | Prisma.ModelVersionCreateManyInput[]
}

/**
 * ModelVersion createManyAndReturn
 */
export type ModelVersionCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModelVersion
   */
  select?: Prisma.ModelVersionSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ModelVersion
   */
  omit?: Prisma.ModelVersionOmit<ExtArgs> | null
  /**
   * The data used to create many ModelVersions.
   */
  data: Prisma.ModelVersionCreateManyInput | Prisma.ModelVersionCreateManyInput[]
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModelVersionIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * ModelVersion update
 */
export type ModelVersionUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModelVersion
   */
  select?: Prisma.ModelVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModelVersion
   */
  omit?: Prisma.ModelVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModelVersionInclude<ExtArgs> | null
  /**
   * The data needed to update a ModelVersion.
   */
  data: Prisma.XOR<Prisma.ModelVersionUpdateInput, Prisma.ModelVersionUncheckedUpdateInput>
  /**
   * Choose, which ModelVersion to update.
   */
  where: Prisma.ModelVersionWhereUniqueInput
}

/**
 * ModelVersion updateMany
 */
export type ModelVersionUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ModelVersions.
   */
  data: Prisma.XOR<Prisma.ModelVersionUpdateManyMutationInput, Prisma.ModelVersionUncheckedUpdateManyInput>
  /**
   * Filter which ModelVersions to update
   */
  where?: Prisma.ModelVersionWhereInput
  /**
   * Limit how many ModelVersions to update.
   */
  limit?: number
}

/**
 * ModelVersion updateManyAndReturn
 */
export type ModelVersionUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModelVersion
   */
  select?: Prisma.ModelVersionSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ModelVersion
   */
  omit?: Prisma.ModelVersionOmit<ExtArgs> | null
  /**
   * The data used to update ModelVersions.
   */
  data: Prisma.XOR<Prisma.ModelVersionUpdateManyMutationInput, Prisma.ModelVersionUncheckedUpdateManyInput>
  /**
   * Filter which ModelVersions to update
   */
  where?: Prisma.ModelVersionWhereInput
  /**
   * Limit how many ModelVersions to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModelVersionIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * ModelVersion upsert
 */
export type ModelVersionUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModelVersion
   */
  select?: Prisma.ModelVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModelVersion
   */
  omit?: Prisma.ModelVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModelVersionInclude<ExtArgs> | null
  /**
   * The filter to search for the ModelVersion to update in case it exists.
   */
  where: Prisma.ModelVersionWhereUniqueInput
  /**
   * In case the ModelVersion found by the `where` argument doesn't exist, create a new ModelVersion with this data.
   */
  create: Prisma.XOR<Prisma.ModelVersionCreateInput, Prisma.ModelVersionUncheckedCreateInput>
  /**
   * In case the ModelVersion was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ModelVersionUpdateInput, Prisma.ModelVersionUncheckedUpdateInput>
}

/**
 * ModelVersion delete
 */
export type ModelVersionDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModelVersion
   */
  select?: Prisma.ModelVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModelVersion
   */
  omit?: Prisma.ModelVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModelVersionInclude<ExtArgs> | null
  /**
   * Filter which ModelVersion to delete.
   */
  where: Prisma.ModelVersionWhereUniqueInput
}

/**
 * ModelVersion deleteMany
 */
export type ModelVersionDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ModelVersions to delete
   */
  where?: Prisma.ModelVersionWhereInput
  /**
   * Limit how many ModelVersions to delete.
   */
  limit?: number
}

/**
 * ModelVersion.baseModelType
 */
export type ModelVersion$baseModelTypeArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BaseModelType
   */
  select?: Prisma.BaseModelTypeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the BaseModelType
   */
  omit?: Prisma.BaseModelTypeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BaseModelTypeInclude<ExtArgs> | null
  where?: Prisma.BaseModelTypeWhereInput
}

/**
 * ModelVersion.files
 */
export type ModelVersion$filesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModelVersionFile
   */
  select?: Prisma.ModelVersionFileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModelVersionFile
   */
  omit?: Prisma.ModelVersionFileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModelVersionFileInclude<ExtArgs> | null
  where?: Prisma.ModelVersionFileWhereInput
  orderBy?: Prisma.ModelVersionFileOrderByWithRelationInput | Prisma.ModelVersionFileOrderByWithRelationInput[]
  cursor?: Prisma.ModelVersionFileWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ModelVersionFileScalarFieldEnum | Prisma.ModelVersionFileScalarFieldEnum[]
}

/**
 * ModelVersion.images
 */
export type ModelVersion$imagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModelVersionImage
   */
  select?: Prisma.ModelVersionImageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModelVersionImage
   */
  omit?: Prisma.ModelVersionImageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModelVersionImageInclude<ExtArgs> | null
  where?: Prisma.ModelVersionImageWhereInput
  orderBy?: Prisma.ModelVersionImageOrderByWithRelationInput | Prisma.ModelVersionImageOrderByWithRelationInput[]
  cursor?: Prisma.ModelVersionImageWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ModelVersionImageScalarFieldEnum | Prisma.ModelVersionImageScalarFieldEnum[]
}

/**
 * ModelVersion without action
 */
export type ModelVersionDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModelVersion
   */
  select?: Prisma.ModelVersionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModelVersion
   */
  omit?: Prisma.ModelVersionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModelVersionInclude<ExtArgs> | null
}
