import type { Prisma } from '../../src/modules/db/generated/client';
import * as z from 'zod';
import { ModelVersionOrderByWithRelationInputObjectSchema as ModelVersionOrderByWithRelationInputObjectSchema } from './objects/ModelVersionOrderByWithRelationInput.schema';
import { ModelVersionWhereInputObjectSchema as ModelVersionWhereInputObjectSchema } from './objects/ModelVersionWhereInput.schema';
import { ModelVersionWhereUniqueInputObjectSchema as ModelVersionWhereUniqueInputObjectSchema } from './objects/ModelVersionWhereUniqueInput.schema';
import { ModelVersionCountAggregateInputObjectSchema as ModelVersionCountAggregateInputObjectSchema } from './objects/ModelVersionCountAggregateInput.schema';
import { ModelVersionMinAggregateInputObjectSchema as ModelVersionMinAggregateInputObjectSchema } from './objects/ModelVersionMinAggregateInput.schema';
import { ModelVersionMaxAggregateInputObjectSchema as ModelVersionMaxAggregateInputObjectSchema } from './objects/ModelVersionMaxAggregateInput.schema';
import { ModelVersionAvgAggregateInputObjectSchema as ModelVersionAvgAggregateInputObjectSchema } from './objects/ModelVersionAvgAggregateInput.schema';
import { ModelVersionSumAggregateInputObjectSchema as ModelVersionSumAggregateInputObjectSchema } from './objects/ModelVersionSumAggregateInput.schema';

export const ModelVersionAggregateSchema: z.ZodType<Prisma.ModelVersionAggregateArgs> = z.object({ orderBy: z.union([ModelVersionOrderByWithRelationInputObjectSchema, ModelVersionOrderByWithRelationInputObjectSchema.array()]).optional(), where: ModelVersionWhereInputObjectSchema.optional(), cursor: ModelVersionWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([ z.literal(true), ModelVersionCountAggregateInputObjectSchema ]).optional(), _min: ModelVersionMinAggregateInputObjectSchema.optional(), _max: ModelVersionMaxAggregateInputObjectSchema.optional(), _avg: ModelVersionAvgAggregateInputObjectSchema.optional(), _sum: ModelVersionSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.ModelVersionAggregateArgs>;

export const ModelVersionAggregateZodSchema = z.object({ orderBy: z.union([ModelVersionOrderByWithRelationInputObjectSchema, ModelVersionOrderByWithRelationInputObjectSchema.array()]).optional(), where: ModelVersionWhereInputObjectSchema.optional(), cursor: ModelVersionWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([ z.literal(true), ModelVersionCountAggregateInputObjectSchema ]).optional(), _min: ModelVersionMinAggregateInputObjectSchema.optional(), _max: ModelVersionMaxAggregateInputObjectSchema.optional(), _avg: ModelVersionAvgAggregateInputObjectSchema.optional(), _sum: ModelVersionSumAggregateInputObjectSchema.optional() }).strict();