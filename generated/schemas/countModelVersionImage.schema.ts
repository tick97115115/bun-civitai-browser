import type { Prisma } from '../../src/modules/db/generated/client';
import * as z from 'zod';
import { ModelVersionImageOrderByWithRelationInputObjectSchema as ModelVersionImageOrderByWithRelationInputObjectSchema } from './objects/ModelVersionImageOrderByWithRelationInput.schema';
import { ModelVersionImageWhereInputObjectSchema as ModelVersionImageWhereInputObjectSchema } from './objects/ModelVersionImageWhereInput.schema';
import { ModelVersionImageWhereUniqueInputObjectSchema as ModelVersionImageWhereUniqueInputObjectSchema } from './objects/ModelVersionImageWhereUniqueInput.schema';
import { ModelVersionImageCountAggregateInputObjectSchema as ModelVersionImageCountAggregateInputObjectSchema } from './objects/ModelVersionImageCountAggregateInput.schema';

export const ModelVersionImageCountSchema: z.ZodType<Prisma.ModelVersionImageCountArgs> = z.object({ orderBy: z.union([ModelVersionImageOrderByWithRelationInputObjectSchema, ModelVersionImageOrderByWithRelationInputObjectSchema.array()]).optional(), where: ModelVersionImageWhereInputObjectSchema.optional(), cursor: ModelVersionImageWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), select: z.union([ z.literal(true), ModelVersionImageCountAggregateInputObjectSchema ]).optional() }).strict() as unknown as z.ZodType<Prisma.ModelVersionImageCountArgs>;

export const ModelVersionImageCountZodSchema = z.object({ orderBy: z.union([ModelVersionImageOrderByWithRelationInputObjectSchema, ModelVersionImageOrderByWithRelationInputObjectSchema.array()]).optional(), where: ModelVersionImageWhereInputObjectSchema.optional(), cursor: ModelVersionImageWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), select: z.union([ z.literal(true), ModelVersionImageCountAggregateInputObjectSchema ]).optional() }).strict();