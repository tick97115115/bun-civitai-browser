import type { Prisma } from '../../src/modules/db/generated/client';
import * as z from 'zod';
import { BaseModelTypeWhereInputObjectSchema as BaseModelTypeWhereInputObjectSchema } from './objects/BaseModelTypeWhereInput.schema';
import { BaseModelTypeOrderByWithAggregationInputObjectSchema as BaseModelTypeOrderByWithAggregationInputObjectSchema } from './objects/BaseModelTypeOrderByWithAggregationInput.schema';
import { BaseModelTypeScalarWhereWithAggregatesInputObjectSchema as BaseModelTypeScalarWhereWithAggregatesInputObjectSchema } from './objects/BaseModelTypeScalarWhereWithAggregatesInput.schema';
import { BaseModelTypeScalarFieldEnumSchema } from './enums/BaseModelTypeScalarFieldEnum.schema';
import { BaseModelTypeCountAggregateInputObjectSchema as BaseModelTypeCountAggregateInputObjectSchema } from './objects/BaseModelTypeCountAggregateInput.schema';
import { BaseModelTypeMinAggregateInputObjectSchema as BaseModelTypeMinAggregateInputObjectSchema } from './objects/BaseModelTypeMinAggregateInput.schema';
import { BaseModelTypeMaxAggregateInputObjectSchema as BaseModelTypeMaxAggregateInputObjectSchema } from './objects/BaseModelTypeMaxAggregateInput.schema';
import { BaseModelTypeAvgAggregateInputObjectSchema as BaseModelTypeAvgAggregateInputObjectSchema } from './objects/BaseModelTypeAvgAggregateInput.schema';
import { BaseModelTypeSumAggregateInputObjectSchema as BaseModelTypeSumAggregateInputObjectSchema } from './objects/BaseModelTypeSumAggregateInput.schema';

export const BaseModelTypeGroupBySchema: z.ZodType<Prisma.BaseModelTypeGroupByArgs> = z.object({ where: BaseModelTypeWhereInputObjectSchema.optional(), orderBy: z.union([BaseModelTypeOrderByWithAggregationInputObjectSchema, BaseModelTypeOrderByWithAggregationInputObjectSchema.array()]).optional(), having: BaseModelTypeScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(BaseModelTypeScalarFieldEnumSchema), _count: z.union([ z.literal(true), BaseModelTypeCountAggregateInputObjectSchema ]).optional(), _min: BaseModelTypeMinAggregateInputObjectSchema.optional(), _max: BaseModelTypeMaxAggregateInputObjectSchema.optional(), _avg: BaseModelTypeAvgAggregateInputObjectSchema.optional(), _sum: BaseModelTypeSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.BaseModelTypeGroupByArgs>;

export const BaseModelTypeGroupByZodSchema = z.object({ where: BaseModelTypeWhereInputObjectSchema.optional(), orderBy: z.union([BaseModelTypeOrderByWithAggregationInputObjectSchema, BaseModelTypeOrderByWithAggregationInputObjectSchema.array()]).optional(), having: BaseModelTypeScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(BaseModelTypeScalarFieldEnumSchema), _count: z.union([ z.literal(true), BaseModelTypeCountAggregateInputObjectSchema ]).optional(), _min: BaseModelTypeMinAggregateInputObjectSchema.optional(), _max: BaseModelTypeMaxAggregateInputObjectSchema.optional(), _avg: BaseModelTypeAvgAggregateInputObjectSchema.optional(), _sum: BaseModelTypeSumAggregateInputObjectSchema.optional() }).strict();