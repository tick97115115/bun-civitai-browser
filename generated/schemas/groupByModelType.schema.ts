import type { Prisma } from '../../src/modules/db/generated/client';
import * as z from 'zod';
import { ModelTypeWhereInputObjectSchema as ModelTypeWhereInputObjectSchema } from './objects/ModelTypeWhereInput.schema';
import { ModelTypeOrderByWithAggregationInputObjectSchema as ModelTypeOrderByWithAggregationInputObjectSchema } from './objects/ModelTypeOrderByWithAggregationInput.schema';
import { ModelTypeScalarWhereWithAggregatesInputObjectSchema as ModelTypeScalarWhereWithAggregatesInputObjectSchema } from './objects/ModelTypeScalarWhereWithAggregatesInput.schema';
import { ModelTypeScalarFieldEnumSchema } from './enums/ModelTypeScalarFieldEnum.schema';
import { ModelTypeCountAggregateInputObjectSchema as ModelTypeCountAggregateInputObjectSchema } from './objects/ModelTypeCountAggregateInput.schema';
import { ModelTypeMinAggregateInputObjectSchema as ModelTypeMinAggregateInputObjectSchema } from './objects/ModelTypeMinAggregateInput.schema';
import { ModelTypeMaxAggregateInputObjectSchema as ModelTypeMaxAggregateInputObjectSchema } from './objects/ModelTypeMaxAggregateInput.schema';
import { ModelTypeAvgAggregateInputObjectSchema as ModelTypeAvgAggregateInputObjectSchema } from './objects/ModelTypeAvgAggregateInput.schema';
import { ModelTypeSumAggregateInputObjectSchema as ModelTypeSumAggregateInputObjectSchema } from './objects/ModelTypeSumAggregateInput.schema';

export const ModelTypeGroupBySchema: z.ZodType<Prisma.ModelTypeGroupByArgs> = z.object({ where: ModelTypeWhereInputObjectSchema.optional(), orderBy: z.union([ModelTypeOrderByWithAggregationInputObjectSchema, ModelTypeOrderByWithAggregationInputObjectSchema.array()]).optional(), having: ModelTypeScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(ModelTypeScalarFieldEnumSchema), _count: z.union([ z.literal(true), ModelTypeCountAggregateInputObjectSchema ]).optional(), _min: ModelTypeMinAggregateInputObjectSchema.optional(), _max: ModelTypeMaxAggregateInputObjectSchema.optional(), _avg: ModelTypeAvgAggregateInputObjectSchema.optional(), _sum: ModelTypeSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.ModelTypeGroupByArgs>;

export const ModelTypeGroupByZodSchema = z.object({ where: ModelTypeWhereInputObjectSchema.optional(), orderBy: z.union([ModelTypeOrderByWithAggregationInputObjectSchema, ModelTypeOrderByWithAggregationInputObjectSchema.array()]).optional(), having: ModelTypeScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(ModelTypeScalarFieldEnumSchema), _count: z.union([ z.literal(true), ModelTypeCountAggregateInputObjectSchema ]).optional(), _min: ModelTypeMinAggregateInputObjectSchema.optional(), _max: ModelTypeMaxAggregateInputObjectSchema.optional(), _avg: ModelTypeAvgAggregateInputObjectSchema.optional(), _sum: ModelTypeSumAggregateInputObjectSchema.optional() }).strict();