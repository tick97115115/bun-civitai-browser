import type { Prisma } from '../../src/modules/db/generated/client';
import * as z from 'zod';
import { ModelVersionImageWhereInputObjectSchema as ModelVersionImageWhereInputObjectSchema } from './objects/ModelVersionImageWhereInput.schema';
import { ModelVersionImageOrderByWithAggregationInputObjectSchema as ModelVersionImageOrderByWithAggregationInputObjectSchema } from './objects/ModelVersionImageOrderByWithAggregationInput.schema';
import { ModelVersionImageScalarWhereWithAggregatesInputObjectSchema as ModelVersionImageScalarWhereWithAggregatesInputObjectSchema } from './objects/ModelVersionImageScalarWhereWithAggregatesInput.schema';
import { ModelVersionImageScalarFieldEnumSchema } from './enums/ModelVersionImageScalarFieldEnum.schema';
import { ModelVersionImageCountAggregateInputObjectSchema as ModelVersionImageCountAggregateInputObjectSchema } from './objects/ModelVersionImageCountAggregateInput.schema';
import { ModelVersionImageMinAggregateInputObjectSchema as ModelVersionImageMinAggregateInputObjectSchema } from './objects/ModelVersionImageMinAggregateInput.schema';
import { ModelVersionImageMaxAggregateInputObjectSchema as ModelVersionImageMaxAggregateInputObjectSchema } from './objects/ModelVersionImageMaxAggregateInput.schema';
import { ModelVersionImageAvgAggregateInputObjectSchema as ModelVersionImageAvgAggregateInputObjectSchema } from './objects/ModelVersionImageAvgAggregateInput.schema';
import { ModelVersionImageSumAggregateInputObjectSchema as ModelVersionImageSumAggregateInputObjectSchema } from './objects/ModelVersionImageSumAggregateInput.schema';

export const ModelVersionImageGroupBySchema: z.ZodType<Prisma.ModelVersionImageGroupByArgs> = z.object({ where: ModelVersionImageWhereInputObjectSchema.optional(), orderBy: z.union([ModelVersionImageOrderByWithAggregationInputObjectSchema, ModelVersionImageOrderByWithAggregationInputObjectSchema.array()]).optional(), having: ModelVersionImageScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(ModelVersionImageScalarFieldEnumSchema), _count: z.union([ z.literal(true), ModelVersionImageCountAggregateInputObjectSchema ]).optional(), _min: ModelVersionImageMinAggregateInputObjectSchema.optional(), _max: ModelVersionImageMaxAggregateInputObjectSchema.optional(), _avg: ModelVersionImageAvgAggregateInputObjectSchema.optional(), _sum: ModelVersionImageSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.ModelVersionImageGroupByArgs>;

export const ModelVersionImageGroupByZodSchema = z.object({ where: ModelVersionImageWhereInputObjectSchema.optional(), orderBy: z.union([ModelVersionImageOrderByWithAggregationInputObjectSchema, ModelVersionImageOrderByWithAggregationInputObjectSchema.array()]).optional(), having: ModelVersionImageScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(ModelVersionImageScalarFieldEnumSchema), _count: z.union([ z.literal(true), ModelVersionImageCountAggregateInputObjectSchema ]).optional(), _min: ModelVersionImageMinAggregateInputObjectSchema.optional(), _max: ModelVersionImageMaxAggregateInputObjectSchema.optional(), _avg: ModelVersionImageAvgAggregateInputObjectSchema.optional(), _sum: ModelVersionImageSumAggregateInputObjectSchema.optional() }).strict();